% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nc_resample.R
\name{nc_project}
\alias{nc_project}
\title{Wrapper for terra::project with gap-filling}
\usage{
nc_project(nc_path, target, times = NULL, ...)
}
\arguments{
\item{nc_path}{character vector, the path(s) to the input NetCDF file(s)}

\item{target}{a SpatRaster}

\item{times}{vector of POSIXct times to load from \code{nc_path}}

\item{...}{named arguments to pass to \code{terra::project}}
}
\value{
SpatRaster with grid matching \code{target} and data layers resampled from \code{nc_path}
}
\description{
This loads the NetCDF data in \code{nc_path} and resamples to match the grid
in \code{target} using \code{terra::project}. NAs are then imputed using with a moving
window average using \code{terra::focal}.
}
\details{
This addresses a problem where two spatial datasets are cropped to the same
bounding box in different projections. Resampling one to match the other can
result in NA pixels around edges of your grid. This can be avoided in the first
place by expanding the bounding box of the source grid, but this isn't always
easy or practical.

After projecting, the function calls \code{terra::focal}, with default settings
and \code{fun=mean}, repeatedly until all NAs are filled (to a maximum of 1e3
iterations).

Only the times listed in \code{times} are loaded and processed. Set \code{times=NULL}
to process all. Both \code{target} and the file(s) at \code{nc_path} must have a well
defined CRS (eg check \code{terra::crs(target)}).
}
