% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nc_helpers.R
\name{my_nc_attributes}
\alias{my_nc_attributes}
\title{Get or set fields in a JSON file on disk representing attributes of a time series}
\usage{
my_nc_attributes(
  nc_path,
  json_path = NULL,
  overwrite = FALSE,
  lazy = FALSE,
  ch = FALSE,
  r = NULL
)
}
\arguments{
\item{nc_path}{character path to the (.nc) time series data file}

\item{json_path}{character path to the JSON (.json) attributes file}

\item{overwrite}{logical indicating to compute fields and write to disk}

\item{lazy}{logical indicating to not modify any existing JSONs}

\item{ch}{logical indicates to collapse results for chunked files into a single list}

\item{r}{SpatRaster to check for appended times (avoids checking \code{rast(nc_path)})}
}
\value{
a list, the contents of the JSON (after updating, if \code{overwrite=TRUE})
}
\description{
This uses \code{jsonlite} to write information about the observed times in the netCDF
files (\code{overwrite=TRUE}), or else reads it back to produce the following in a list:
}
\details{
\itemize{
\item "na": index of layers containing any number of NAs
\item "time" : all times as POSIXct strings (in same order as layers)
\item "time_obs" : elements of "time" whose layers are not listed "na"
\item "time_na" : elements of "time" whose layers are listed "na"
}

All times are assumed to be in the UTC time zone.

In read mode (\code{overwrite=FALSE}), the function returns all fields in the JSON as
a list, along with "time_obs" and "time_na", which are computed from "na" and "time".
This happens without checking the contents of the nc file. If the file
doesn't exist in read mode, the function returns NULL.

In write mode (\code{overwrite=TRUE}), only the fields "na" and "time" are written to
the JSON. This should leave any other existing fields alone unless there is a name
collision, or the structure is too complicated for a return trip through \code{fromJSON}
and \code{toJSON}. If \code{lazy=TRUE} the function will only write the JSON if it doesn't
already exist, and otherwise does not modify any existing ones.

If a SpatRaster is passed to in \code{r}, the function will append the NA index and times
in \code{r} to the existing lists for the raster at \code{nc_path}. This is useful when
appending a small number of new times to a large existing time series, where it
would be slow and redundant to check for NAs in existing layers.

Pass a vector to \code{nc_path} in read mode to get results for each file back in a list.
If \code{ch=TRUE}, the function treats these files as chunks of a single time series, and
the list output is collapsed to into a single list for all of the files - 'time' lists
times appearing in any of the files; 'time_obs' lists the times at which a non-NA layer
is found in at least one of the files; 'time_na' lists the times at which every
appearance in every file is an NA layer; and 'na' gives the index of \code{time_na} in \code{time}.

By default the JSON is located in sub-directory 'time' and has the same name
as the nc (except for file extension). Change this with \code{json_path}.
}
