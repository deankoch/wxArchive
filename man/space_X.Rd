% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/space_X.R
\name{space_X}
\alias{space_X}
\title{Return a data matrix of spatial linear predictors using a DEM}
\usage{
space_X(
  r,
  dem,
  dem_knots = NULL,
  X_center = NULL,
  X_scale = NULL,
  intercept = FALSE
)
}
\arguments{
\item{r}{SpatRaster providing the target grid (data layers are ignored)}

\item{dem}{SpatRaster of elevation data at finer resolution than \code{r}}

\item{dem_knots}{numeric vector of elevation knot locations (in metres)}

\item{X_center}{numeric vector of centering constants}

\item{X_scale}{numeric vector of scaling constants}

\item{intercept}{logical indicating to include an intercept column (of \code{1}s)}
}
\value{
a matrix of covariates
}
\description{
This creates predictors for Northing and Easting (or latitude and longitude),
as well as a spline basis for the lapse rate effect of elevation. All columns
are centered and scaled by standard deviation, in that order.
}
\details{
The output matrix has a row for each (spatial) point in \code{r} and a column for
every predictor (\code{1 + length(dem_knots)}, with default \code{intercept=FALSE}).

Rows are in the column major ordering used by \code{snapKrig} (but not \code{terra}).

The centering/scaling constants and the spline knots are provided in attributes
of the returned matrix. These can be copied and passed back to this function in
subsequent calls with a different \code{dem} or \code{r}. This will ensure that your fitted
\code{betas} are scaled properly when predicting at unseen locations.

It is assumed that \code{dem} covers the extent of \code{r}. \code{dem} can have a different
projection than \code{r}, but for best results it should have a much finer resolution.

The spline basis is created using \code{splines::ns}. If \code{dem_knots} is supplied,
it should include boundary points. If it is not supplied, the function puts
knots at the default \code{quantile} values of \code{dem}, after cropping \code{dem} to the
extent of \code{r} (but before resampling).
}
