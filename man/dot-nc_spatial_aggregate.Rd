% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/nc_aggregate_space.R
\name{.nc_spatial_aggregate}
\alias{.nc_spatial_aggregate}
\title{fun character, naming a function to use for spatial aggregation (NA to disable)
#'
writes a separate NetCDF file for each one, using an integer-valued suffix
in the filename corresponding to the order of the polygons in \code{poly_out}.}
\usage{
.nc_spatial_aggregate(r, fun = "mean", poly_list = NULL)
}
\arguments{
\item{r}{SpatRaster with extent covering \code{poly_list}}

\item{fun}{character name of the function to use for aggregation (or NULL for no aggregation)}

\item{poly_list}{list of sf POLYGON objects to use for cropping output (or NULL for no cropping)}
}
\value{
either a SpatVector, a list of them
}
\description{
If \code{fun} is supplied, the function uses the named function to aggregate the
data values over the supplied polygons (within each date), and writes its
results in a plain text table on disk. Set \code{write_nc=FALSE} to skip writing
the NetCDF files (the function will still write the aggregate data). Set
\code{fun=NA} to skip aggregation.
}
\details{
With default \code{fun=NULL} the function expects variable names of the form
"var_fun"; Names are split at the "_", and the second string is copied to \code{fun}.
eg if \code{fun=NULL} and \code{var_nm = 'tmp_max'} then the function will compute the
\code{max} on each polygon, on each date.
Aggregate raster data over a set of polygons

This aggregates the values in SpatRaster \code{r} by masking to the polygon(s) in \code{poly_list}
and applying the function \code{fun} to each subset.

\code{r} can have multiple layers. A single numeric is returned for each polygon, forming
a vector of aggregate values at different times. When \code{poly_list} has length 1 this is
returned as a vector, otherwise it is returned as a matrix with one row for each polygon.

\code{fun} specifies the name of the aggregation function to use - typical usage will set one
of 'mean' 'max' and 'min' (see \code{?terra::extract}). Alternatively, set \code{fun=NULL} to return
a list of SpatRasters cropped to \code{poly_list} (one per polygon). When \code{fun} is not \code{NULL},
this list is passed (along with \code{fun}) to \code{terra::extract} and the result is reshaped as
described above.
}
